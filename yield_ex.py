import random as rnd
import luigi
import time

class Template_Matching(luigi.Task):
    def output(self):
        print("Template_Matching : output @@@@@@@@@@@@@@@@@@")
        return luigi.LocalTarget("yield_test/templateMatching_%s.txt" % time.asctime())

    def run(self):
        print("Template_Matching : run @@@@@@@@@@@@@@@@@@")
        sim = rnd.randint(1,4)
        print("!!!!!!!!!!SIMILALITY : %d !!!!!!!!!!!!!!!" % sim)
        with self.output().open("w") as target:
            # target.write(f"This file was generated by Task1 at {time.asctime()}.")
            # target.write("this file was generated by Task1 at %s." % time.asctime())
            target.write(str(sim))



class Expert_Check(luigi.Task):
    def output(self):
        print("Expert_Check : output @@@@@@@@@@@@@@@@@@")
        return luigi.LocalTarget("yield_test/ExpertCheck_%s.txt" % time.asctime())

    def run(self):
        print("Expert_Check : run @@@@@@@@@@@@@@@@@@")
        with self.output().open("w") as target:
            # target.write(f"This file was generated by Task1 at {time.asctime()}.")
            target.write("Expert Check was done at %s." % time.asctime())




class Next_Task(luigi.Task):

    def requires(self):
        return Template_Matching()

    def output(self):
        print("Next_Task : output @@@@@@@@@@@@@@@@@@")
        return luigi.LocalTarget("yield_test/newtask_%s.txt" % time.asctime())

    def run(self):
        print("Next_Task : run @@@@@@@@@@@@@@@@@@")
        with self.input().open("r") as tm:
            sim = int(tm.read())

        # tm = self.clone(Template_Matching)
        # yield Template_Matching
        # with tm.output().open("r") as tm:
        #     sim = int(tm.read())
        
        if(sim<5):
            print("SIMILALITY LESS THAN 5 SO THAT WE EXECUTE EXPERT CHECK")
            yield Expert_Check()
        
        with self.output().open("w") as target:
            target.write("New Task was done at %s." % time.asctime())


if __name__ == '__main__':
    luigi.run(['Next_Task', '--workers', '1', '--local-scheduler'])
    # luigi.run(['Next_Task', '--workers', '1'])